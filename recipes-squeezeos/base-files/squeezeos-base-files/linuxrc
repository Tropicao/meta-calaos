#!/bin/sh
#
# System initialisation

# Mount /proc and /sys filesystems
/bin/mount -a

# Mount read/write filesystem, we support ubifs or jffs2
UBIFS_DEV=`grep ubifs /proc/mtd | cut -c4`
JFFS2_DEV=`grep jffs2 /proc/mtd | cut -c4`

if [ ! -z $UBIFS_DEV ]
then
	# ubifs filesystem
	MOUNT_TYPE=ubifs
       	MOUNT_MTD=/dev/mtd${UBIFS_DEV}
	MOUNT_DEVICE=ubi0:ubifs
elif  [ ! -z $JFFS2_DEV ]
then
	# jffs2 filesystem
	MOUNT_TYPE=jffs2
	MOUNT_MTD=/dev/mtd${JFFS2_DEV}
	MOUNT_DEVICE=/dev/mtdblock${JFFS2_DEV}
fi

/bin/mount -t ${MOUNT_TYPE} -o noatime ${MOUNT_DEVICE} /mnt/storage
MOUNT_OK=$?

/bin/grep -q factoryreset /proc/cmdline
FACTORY_RESET=$?

# Forced factory reset
SQUEEZEOS_VERSION=`/usr/bin/head -1 /mnt/storage/etc/squeezeos.version | /usr/bin/cut -dr -f1`
SQUEEZEOS_REVISION=`/usr/bin/head -1 /mnt/storage/etc/squeezeos.version | /usr/bin/cut -dr -f2`

/bin/grep -q Fab4 /proc/cpuinfo
if [ $? -eq 0 ]; then
    if [ $SQUEEZEOS_REVISION -lt 4398 ]; then
        FACTORY_RESET=0
     fi
fi

# Factory reset
if [ $MOUNT_OK -ne 0 -o -f /mnt/storage/.factoryreset -o $FACTORY_RESET -eq 0 ]
then
	/bin/echo "Factory Reset"
	/bin/cat /usr/share/images/factoryreset.fb > /dev/fb0

	/bin/grep -q Baby /proc/cpuinfo
	if [ $? -eq 0 ]; then
		echo "erase" > /sys/devices/platform/i2c-adapter\:i2c-1/1-0010/flash
	fi

	/bin/umount /mnt/storage
	/usr/sbin/flash_eraseall -q ${MOUNT_MTD}
	/bin/mount -t ${MOUNT_TYPE} -o noatime ${MOUNT_DEVICE} /mnt/storage

	# Store version
	/bin/mkdir -p /mnt/storage/etc
	/bin/cp /etc/squeezeos.version /mnt/storage/etc/squeezeos.version
else
	# Upgraded?
	/usr/bin/diff -N /etc/squeezeos.version /mnt/storage/etc/squeezeos.version > /dev/null 2> /dev/null
	if [ $? -ne 0 ]
	then
		# Remove modified files
		/bin/echo "SqueezeOS upgraded from $SQUEEZEOS_VERSION"
		/usr/bin/find /mnt/storage/ -type f | /bin/grep -v -f /etc/keep-after-upgrade | /usr/bin/xargs /bin/rm -f

		# Delete udev cache
		/bin/rm -f /mnt/storage/etc/dev.tar

		# Previous version
		echo $SQUEEZEOS_VERSION 7.4 | awk  '{ if (NF==1 || $1 < $2) exit 1 }'
		if [ $? -ne 0 ]
		then
			# Upgrade networking configuration
			SSID=`awk 'BEGIN { FS="\""; ssid="?" } /ssid="/ { last=$2; if (ssid=="?") {ssid=$2}} /disabled=1/ {if (ssid==last) {ssid="?"}} END { print ssid }' /mnt/storage/etc/wpa_supplicant.conf`
			SSID=`echo $SSID | sed -e 's/\s/_/g'`

			/bin/echo "Upgrading interfaces, ssid=$SSID"

			if [ "x$SSID" != "x" ]
			then
				/bin/grep -q "auto eth0=$SSID" /mnt/storage/etc/network/interfaces
				if [ $? -ne 0 ]; then
					echo "auto eth0=$SSID" >> /mnt/storage/etc/network/interfaces
				fi
 			fi
		fi

		# Store version
		/bin/mkdir -p /mnt/storage/etc
		/bin/mv /mnt/storage/etc/squeezeos.version /mnt/storage/etc/squeezeos.version.bak 
		/bin/cp /etc/squeezeos.version /mnt/storage/etc/squeezeos.version
	fi
fi


# Mount overlay filesystem
grep -q unionfs /proc/filesystems
HAS_UNIONFS=$?

if [ $HAS_UNIONFS -eq 0 ]
then
	/bin/echo "Filesystem overlay: unionfs"

	/bin/mount -t unionfs -o dirs=/mnt/storage=rw:/=ro none /mnt/overlay
	/bin/mount -o move /dev /mnt/overlay/dev

	/bin/umount /sys
	/bin/mount -t sysfs none /mnt/overlay/sys/

	/bin/umount /proc
	/bin/mount -t proc none /mnt/overlay/proc/
else
	/bin/echo "Filesystem overlay: mini_fo"

	/bin/mount -t mini_fo -o base=/,sto=/mnt/storage / /mnt/overlay
	/bin/mount -o move /dev /mnt/overlay/dev
fi


# Run init process
exec /usr/sbin/chroot /mnt/overlay /sbin/init

/bin/echo "Failed to run init"
exec /bin/sh

exit 1

